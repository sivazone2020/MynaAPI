version: '3.8'

services:
  mynaapi:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_DATE: "${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}"
        VERSION: "${VERSION:-dev}"
    container_name: mynaapi-dev
    ports:
      - "8000:8000"
    environment:
      # Environment variables (use .env file for actual values)
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_HOST=${PINECONE_HOST}
      - PINECONE_INDEX=${PINECONE_INDEX:-mynaservice}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      - JWT_EXPIRATION_HOURS=${JWT_EXPIRATION_HOURS:-24}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      # Mount logs directory for persistent logging
      - ./logs:/app/logs
      # Mount source code for development (comment out for production)
      - ./app:/app/app:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - mynaapi-network

  # Optional: Redis cache for improved performance
  redis:
    image: redis:7-alpine
    container_name: mynaapi-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - mynaapi-network
    profiles:
      - cache

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: mynaapi-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./deployment/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - mynaapi-network
    profiles:
      - monitoring

  # Optional: Grafana dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: mynaapi-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deployment/monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./deployment/monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    restart: unless-stopped
    networks:
      - mynaapi-network
    profiles:
      - monitoring
    depends_on:
      - prometheus

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  mynaapi-network:
    driver: bridge
    name: mynaapi-network
